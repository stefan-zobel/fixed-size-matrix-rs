var searchIndex = JSON.parse('{\
"const_matrix":{"doc":"Basic matrix arithmetic for heap and stack allocated …","t":[0,8,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["matrix","Arithmetic","HMatrix","MF","Numeric","SMatrix","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","diag_heap","diag_stack","fmt","fmt","from","from","from","index","index","index_mut","index_mut","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_heapref_to_stack","mul_heapval_to_stack","mul_ref_to_heap","mul_ref_to_stack","mul_stackref_to_stack","mul_stackval_to_stack","mul_val_to_heap","mul_val_to_stack","neg","neg","new","new","new_heap","new_stack","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","to_heap","to_owned","to_owned","to_stack","trans","trans","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unit_heap","unit_stack"],"q":["const_matrix","const_matrix::matrix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Basic arithmetic for compile-time-sized matrices either …","All types for which the operators <code>+</code>, <code>+=</code>, <code>*</code>, <code>*=</code>, <code>-</code> (unary …","A matrix which is allocated on the heap.","<code>MF</code> is the <code>M</code>atrix <code>F</code>actory used for the creation of new …","All types which are <code>Copy</code> and <code>Default</code> in addition to being …","A matrix which is allocated on the stack. An <code>SMatrix</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new matrix initialized with zeros on the stack.","Create a new matrix initialized with zeros on the stack.","Create a diagonal matrix with initial diagonal value …","Create a diagonal matrix with initial diagonal value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiply a heap matrix with a heap matrix and allocate the …","Multiply a heap matrix with a heap matrix and allocate the …","Multiply two stack matrices and allocate the result on the …","Multiply a stack matrix with a heap matrix and allocate …","Multiply a heap matrix with a stack matrix and allocate …","Multiply a heap matrix with a stack matrix and allocate …","Multiply two stack matrices and allocate the result on the …","Multiply a stack matrix with a heap matrix and allocate …","","","Creates a new stack-allocated matrix from the given …","Creates a new stack-allocated matrix from the given …","Create a new matrix initialized with zeros on the heap.","Create a new matrix initialized with zeros on the stack.","","","","","","","","","","","","","","","","","","","","","","","","","Creates a heap-allocated copy of this stack-allocated …","","","Creates a stack-allocated copy of this heap-allocated …","Creates a stack-allocated transpose of this matrix.","Creates a heap-allocated transpose of this matrix.","","","","","","","","","","Create an identity matrix on the heap.","Create an identity matrix on the stack."],"i":[0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,3,1,2,3,1,2,1,2,1,2,1,2,3,3,1,2,3,1,2,1,2,1,2,3,1,2,1,1,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,2,2,1,1,1,2,1,2,3,3,1,1,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,1,1,2,2,1,2,3,1,2,3,1,2,3,1,2,3,3],"f":[null,null,null,null,null,null,[[["hmatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[]],[[]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[]],[[["hmatrix",3]]],[[["smatrix",3]]],[[]],[[]],[[]],[[["smatrix",3]]],[[["smatrix",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["smatrix",3]],[[],["hmatrix",3]],[[]],[[]],[[]],[[]],[[],["hmatrix",3]],[[],["smatrix",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[]],[[]],[[]],[[]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[]],[[]],[[]],[[]],[[["hmatrix",3]],["smatrix",3]],[[["hmatrix",3]],["smatrix",3]],[[["smatrix",3]],["hmatrix",3]],[[["hmatrix",3]],["smatrix",3]],[[["smatrix",3]],["smatrix",3]],[[["smatrix",3]],["smatrix",3]],[[["smatrix",3]],["hmatrix",3]],[[["hmatrix",3]],["smatrix",3]],[[]],[[]],[[]],[[]],[[],["hmatrix",3]],[[],["smatrix",3]],[[["smatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[["hmatrix",3]]],[[]],[[]],[[]],[[["smatrix",3]]],[[["smatrix",3]]],[[["smatrix",3]]],[[]],[[]],[[],["hmatrix",3]],[[]],[[]],[[],["smatrix",3]],[[],["smatrix",3]],[[],["hmatrix",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["hmatrix",3]],[[],["smatrix",3]]],"p":[[3,"SMatrix"],[3,"HMatrix"],[3,"MF"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};